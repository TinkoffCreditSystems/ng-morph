{"version":3,"file":"apps_demo_src_app_modules_interfaces_interfaces_module_ts.js","mappings":";;;;;;;;;;;;;;;AAAmE;;;AAEnE,MAAME,UAAU,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;CA0BlB;AAED,MAMaC,mBAAmB;EANhCC,YAAA;IAOW,KAAAF,UAAU,GAAGA,UAAU;;EACjC,QAAAG,CAAA;;;;UAFYF,mBAAmB;IAAAG,IAAA;IAAAC,MAAA,EAAAC,6DAAA,CAAAP;EAAA;EAAA,QAAAS,EAAA;;;UAAnBP,mBAAmB;IAAAQ,QAAA;IAAAC,QAAA,EAAAJ,0CAAA;IAAAK,QAAA,ECpChC,iRAQA;IAAAC,MAAA;IAAAC,YAAA;MAAAC,IAAA;MAAAC,IAAA,EAAAC,oEAAA;MAAAP,QAAA;MAAAS,MAAA;IAAA;MAAAJ,IAAA;MAAAC,IAAA,EAAAC,oEAAA;MAAAP,QAAA;MAAAS,MAAA;IAAA;IAAAE,eAAA,EAAAd,kEAAA,CAAAe;EAAA;;AD4BgC;;;;;QAAnBpB,mBAAmB;EAAAqB,UAAA;UAN/BvB,oDAAS;;gBACE,YAAY;MAAAqB,eAAA,EAGLtB,kEAAuB,CAACuB,MAAM;MAAAV,QAAA;MAAAC,MAAA;IAAA;;;;;;;;;;;;;;;;;;;;;;AElCR;AACM;AAC4B;AAC5B;AACc;;;AAE7D,MASagB,gBAAgB;EAAA,QAAAzB,CAAA;;;;UAAhByB,gBAAgB;IAAAxB,IAAA;IAAAC,MAAA,EAAAC,6DAAA,CAAAiB;EAAA;EAAA,QAAAf,EAAA;;;;UAAhBoB,gBAAgB;IAAAC,YAAA,GAHZ5B,sEAAmB;IAAA6B,OAAA,GAJhCH,yDAAa,EACbF,kEAAiB,EAAAT,yDAAA;IAAAe,OAAA,GAIT9B,sEAAmB;EAAA;EAAA,QAAA+B,EAAA;;;;UAElBJ,gBAAgB;IAAAE,OAAA,GAPzBH,yDAAa,EACbF,kEAAiB,EACjBD,yDAAY,CAACS,QAAQ,CAACP,sEAAiB,CAACzB,sEAAmB,CAAC,CAAC;EAAA;;AAKpC;;;;;QAAhB2B,gBAAgB;EAAAN,UAAA;UAT5BC,mDAAQ;WAAC;MACRO,OAAO,EAAE,CACPH,yDAAa,EACbF,kEAAiB,EACjBD,yDAAY,CAACS,QAAQ,CAACP,sEAAiB,CAACzB,sEAAmB,CAAC,CAAC,CAC9D;MACD4B,YAAY,EAAE,CAAC5B,sEAAmB,CAAC;MACnC8B,OAAO,EAAE,CAAC9B,sEAAmB;KAC9B","sources":["./apps/demo/src/app/modules/interfaces/interfaces.component.ts","./apps/demo/src/app/modules/interfaces/interfaces.template.html","./apps/demo/src/app/modules/interfaces/interfaces.module.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nconst interfaces = `import {\n    addInterfaces,\n    editInterfaces,\n    getInterfaces,\n    removeInterfaces,\n    setActiveProject,\n    saveActiveProject,\n} from 'ng-morph';\n\nsetActiveProject(createProject(new NgMorphTree(), '/', ['**/*.ts'));\n\naddInterfaces('some/path/file.ts', {\n    name: 'A',\n    properties: [{ name: 's', type: 'string' }],\n    methods: [{ name: 'method', returnType: 'number' }],\n});\n\nconst declarations = getInterfaces('some/path/**.ts');\n\neditInterfaces(declarations, () => ({\n    name: 'B',\n}));\n\nremoveInterfaces(declarations);\n\nsaveActiveProject();\n`;\n\n@Component({\n  selector: 'interfaces',\n  templateUrl: 'interfaces.template.html',\n  styleUrls: ['./interfaces.style.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class InterfacesComponent {\n  readonly interfaces = interfaces;\n}\n","<tui-doc-page header=\"Interfaces\">\n  <p>\n    You can create, get, edit and remove interfaces in your files with\n    declarative descriptions and conditions.\n  </p>\n\n  <tui-doc-code filename=\"migration.ts\" [code]=\"interfaces\"></tui-doc-code>\n</tui-doc-page>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TuiAddonDocModule, tuiGenerateRoutes } from '@taiga-ui/addon-doc';\nimport { TuiLinkModule } from '@taiga-ui/core';\nimport { InterfacesComponent } from './interfaces.component';\n\n@NgModule({\n  imports: [\n    TuiLinkModule,\n    TuiAddonDocModule,\n    RouterModule.forChild(tuiGenerateRoutes(InterfacesComponent)),\n  ],\n  declarations: [InterfacesComponent],\n  exports: [InterfacesComponent],\n})\nexport class InterfacesModule {}\n"],"names":["ChangeDetectionStrategy","Component","interfaces","InterfacesComponent","constructor","_","deps","target","i0","ɵɵFactoryTarget","_2","selector","ngImport","template","styles","dependencies","kind","type","i1","TuiDocCodeComponent","inputs","TuiDocPageComponent","changeDetection","OnPush","decorators","NgModule","RouterModule","TuiAddonDocModule","tuiGenerateRoutes","TuiLinkModule","InterfacesModule","declarations","imports","exports","_3","forChild"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
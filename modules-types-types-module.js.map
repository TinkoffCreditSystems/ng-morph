{"version":3,"sources":["./apps/demo/src/app/modules/types/types.module.ts","./apps/demo/src/app/modules/types/types.component.ts","./apps/demo/src/app/modules/types/types.template.html"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACyB;AACzB;AACI;;;AAW5C,MAAM,WAAW;;sEAAX,WAAW;0FAAX,WAAW;8FARb;YACP,4DAAa;YACb,qEAAiB;YACjB,4DAAY,CAAC,QAAQ,CAAC,0EAAc,CAAC,+DAAc,CAAC,CAAC;SACtD;mIAIU,WAAW,mBAHP,+DAAc,aAJ3B,4DAAa;QACb,qEAAiB,2EAIT,+DAAc;;;;;;;;;;;;;;;;;;;ACX1B,MAAM,KAAK,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;CA0Bb,CAAC;AAQK,MAAM,cAAc;IAN3B;QAOW,UAAK,GAAG,KAAK,CAAC;KACxB;;4EAFY,cAAc;8FAAd,cAAc;QCpC3B,kFAA6B;QAC3B,oEAAG;QACD,mKAEF;QAAA,4DAAI;QAEJ,6EAAoE;QACtE,4DAAe;;QADyB,0DAAc;QAAd,2EAAc","file":"modules-types-types-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { generateRoutes, TuiAddonDocModule } from '@taiga-ui/addon-doc';\nimport { TuiLinkModule } from '@taiga-ui/core';\nimport { TypesComponent } from './types.component';\n\n@NgModule({\n  imports: [\n    TuiLinkModule,\n    TuiAddonDocModule,\n    RouterModule.forChild(generateRoutes(TypesComponent)),\n  ],\n  declarations: [TypesComponent],\n  exports: [TypesComponent],\n})\nexport class TypesModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nconst types = `import {\n    addTypeAliases,\n    editTypeAliases,\n    getTypeAliases,\n    removeTypeAliases,\n    setActiveProject,\n    saveActiveProject,\n} from 'ng-morph';\n\nsetActiveProject(createProject(new NgMorphTree(), '/', ['**/*.ts'));\n\naddTypeAliases('some/path/file.ts', {\n    name: 'A',\n    typeParameters: ['T'],\n    type: 'T[]',\n});\n\nconst declarations = getTypeAliases('some/path/file.ts');\n\neditTypeAliases(declarations, () => ({\n    name: 'B',\n}));\n\nremoveTypeAliases(declarations);\n\nsaveActiveProject();\n`;\n\n@Component({\n  selector: 'types',\n  templateUrl: 'types.template.html',\n  styleUrls: ['./types.style.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TypesComponent {\n  readonly types = types;\n}\n","<tui-doc-page header=\"Types\">\n  <p>\n    You can create, get, edit and remove types in your files with declarative\n    descriptions and conditions.\n  </p>\n\n  <tui-doc-code filename=\"migration.ts\" [code]=\"types\"></tui-doc-code>\n</tui-doc-page>\n"],"sourceRoot":"webpack:///"}
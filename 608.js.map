{"version":3,"file":"608.js","mappings":"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","sources":["./apps/demo/src/app/pages/classes/index.ts","./apps/demo/src/app/pages/classes/index.html","./apps/demo/src/app/pages/classes/samples/accessors.ts","./apps/demo/src/app/pages/classes/samples/constructors.ts","./apps/demo/src/app/pages/classes/samples/decorators.ts","./apps/demo/src/app/pages/classes/samples/methods.ts","./apps/demo/src/app/pages/classes/samples/properties.ts"],"sourcesContent":["import {ChangeDetectionStrategy, Component} from '@angular/core';\nimport {TuiDocCodeModule, TuiDocPageModule} from '@taiga-ui/addon-doc';\n\nimport {ACCESSORS_SAMPLES} from './samples/accessors';\nimport {CONSTRUCTORS_SAMPLES} from './samples/constructors';\nimport {DECORATORS_SAMPLES} from './samples/decorators';\nimport {METHODS_SAMPLES} from './samples/methods';\nimport {PROPERTIES_SAMPLES} from './samples/properties';\n\nconst add = `import {\n    addClasses,\n    setActiveProject,\n    saveActiveProject,\n} from 'ng-morph';\n\nsetActiveProject(createProject(new NgMorphTree(), '/', ['**/*.ts']));\n\naddClasses('some/path/file.ts', {\n    name: 'A',\n    isDefaultExport: true,\n    methods: [\n      {\n        name: 'method',\n        isStatic: true,\n        statements: 'return 0',\n        returnType: 'number',\n      },\n    ],\n});\n\nsaveActiveProject();\n`;\n\nconst edit = `import {\n    getClasses,\n    editClasses,\n    setActiveProject,\n    saveActiveProject,\n} from 'ng-morph';\n\nsetActiveProject(createProject(new NgMorphTree(), '/', ['**/*.ts'));\n\nconst classes = getClasses('some/path/file.ts');\n\neditClasses(classes, classEntity => ({\n  isExported: true,\n  name: classEntity.name.replace('Test', ''),\n}));\n\nsaveActiveProject();\n`;\n\nconst remove = `import {\n    removeClasses,\n    setActiveProject,\n    saveActiveProject,\n} from 'ng-morph';\n\nsetActiveProject(createProject(new NgMorphTree(), '/', ['**/*.ts'));\n\nremoveClasses(getClasses('**/**', { name: 'A' }));`;\n\nconst getClasses = `import {\n    getClasses,\n    setActiveProject,\n    saveActiveProject,\n} from 'ng-morph';\n\nsetActiveProject(createProject(new NgMorphTree(), '/', ['**/*.ts'));\n\nconst allClassesWithNameB = getClasses('some/path/**.ts', {\n    name: 'B',\n});\n\nsaveActiveProject();\n`;\n\n@Component({\n    standalone: true,\n    imports: [TuiDocCodeModule, TuiDocPageModule],\n    templateUrl: './index.html',\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport default class ClassesComponent {\n    protected readonly add = add;\n    protected readonly edit = edit;\n    protected readonly remove = remove;\n    protected readonly getClasses = getClasses;\n\n    protected readonly accessors = ACCESSORS_SAMPLES;\n    protected readonly methods = METHODS_SAMPLES;\n    protected readonly properties = PROPERTIES_SAMPLES;\n    protected readonly decorators = DECORATORS_SAMPLES;\n    protected readonly constructors = CONSTRUCTORS_SAMPLES;\n}\n","<tui-doc-page header=\"Classes\">\n    <ng-template pageTab=\"Classes\">\n        <p>You can manipulate with classes using the following utils</p>\n\n        <section>\n            <h2>Add classes</h2>\n\n            <p>You can generate a class from declarative description. Use autocomplete to check all the abilities.</p>\n\n            <tui-doc-code\n                filename=\"migration.ts\"\n                [code]=\"add\"\n            />\n        </section>\n\n        <section>\n            <h2>Get classes</h2>\n\n            <p>You can get all classes with some declarative condition. Use autocomplete to check all the abilities.</p>\n\n            <tui-doc-code\n                filename=\"migration.ts\"\n                [code]=\"getClasses\"\n            />\n        </section>\n\n        <section>\n            <h2>Edit classes</h2>\n\n            <p>\n                You can edit existing classes with a handler returining a declarative description. Use autocomplete to\n                check all the abilities.\n            </p>\n\n            <tui-doc-code\n                filename=\"migration.ts\"\n                [code]=\"edit\"\n            />\n        </section>\n\n        <section>\n            <h2>Remove classes</h2>\n\n            <p>\n                You can remove all classes with some declarative condition. Use autocomplete to check all the abilities.\n            </p>\n\n            <tui-doc-code\n                filename=\"migration.ts\"\n                [code]=\"remove\"\n            />\n        </section>\n    </ng-template>\n\n    <ng-template pageTab=\"Constructors\">\n        <p>\n            You can create, get, edit and remove constructors of your classes with declarative descriptions and\n            conditions.\n        </p>\n\n        <tui-doc-code\n            filename=\"migration.ts\"\n            [code]=\"constructors\"\n        />\n    </ng-template>\n\n    <ng-template pageTab=\"Methods\">\n        <p>\n            You can create, get, edit and remove methods of your classes with declarative descriptions and conditions.\n        </p>\n\n        <tui-doc-code\n            filename=\"migration.ts\"\n            [code]=\"methods\"\n        />\n    </ng-template>\n\n    <ng-template pageTab=\"Properties\">\n        <p>\n            You can create, get, edit and remove properties of your classes with declarative descriptions and\n            conditions.\n        </p>\n\n        <tui-doc-code\n            filename=\"migration.ts\"\n            [code]=\"properties\"\n        />\n    </ng-template>\n\n    <ng-template pageTab=\"Accessors\">\n        <p>\n            You can create, get, edit and remove accessors of your classes with declarative descriptions and conditions.\n        </p>\n\n        <tui-doc-code\n            filename=\"migration.ts\"\n            [code]=\"accessors\"\n        />\n    </ng-template>\n\n    <ng-template pageTab=\"Decorators\">\n        <p>\n            You can create, get, edit and remove decorators of your classes with declarative descriptions and\n            conditions.\n        </p>\n\n        <tui-doc-code\n            filename=\"migration.ts\"\n            [code]=\"decorators\"\n        />\n    </ng-template>\n</tui-doc-page>\n","export const ACCESSORS_SAMPLES = `import {\n    addAccessors,\n    getAccessors,\n    editAccessors,\n    removeAccessors,\n    setActiveProject,\n    saveActiveProject,\n} from 'ng-morph';\n\nsetActiveProject(createProject(new NgMorphTree(), '/', ['**/*.ts'));\n\naddAccessors(getClasses('some/path/file.ts'), [\n    {\n      name: 'setter',\n      kind: StructureKind.SetAccessor,\n    },\n]);\n\nconst declarations = getAccessors(getClasses('some/path/**.ts'), {\n    name: 'd',\n    isStatic: true,\n});\n\neditAccessors(declarations, () => ({\n    name: 'anotherName',\n}));\n\nremoveAccessors(declarations);\n\nsaveActiveProject();\n`;\n","export const CONSTRUCTORS_SAMPLES = `import {\n    addConstructors,\n    getConstructors,\n    editConstructors,\n    removeConstructors,\n    setActiveProject,\n    saveActiveProject,\n} from 'ng-morph';\n\nsetActiveProject(createProject(new NgMorphTree(), '/', ['**/*.ts'));\n\naddConstructors(getClasses('some/path/file.ts', { name: 'B' }), {\n    parameters: [\n      {\n        decorators: [{ name: 'Inject', arguments: ['SomeType'] }],\n        name: 'param',\n        type: 'SomeType',\n      },\n    ],\n    scope: Scope.Protected,\n});\n\n// Result is:\nclass B {\n    protected constructor(@Inject(SomeType) param: SomeType) {}\n}\n\nconst declarations = getConstructors(getClasses('some/path/**.ts'));\n\neditConstructors(declarations, () => ({\n    scope: Scope.Protected,\n}));\n\nremoveConstructors(declarations);\n\nsaveActiveProject();\n`;\n","export const DECORATORS_SAMPLES = `import {\n    addDecorators,\n    getDecorators,\n    editDecorators,\n    removeDecorators,\n    setActiveProject,\n    saveActiveProject,\n} from 'ng-morph';\n\nsetActiveProject(createProject(new NgMorphTree(), '/', ['**/*.ts'));\n\nconst classes = getClasses('some/path/file.ts');\nconst methods = getMethods(classes, { name: 'method' });\nconst constructorParams = getParams(getConstructors(classes), {\n  name: 'param',\n});\nconst methodParams = getParams(methods);\nconst properties = getProperties(classes, { name: 'property' });\nconst getAccessorss = getAccessors(classes, { name: 'getAccessor' });\nconst setAccessors = getAccessors(classes, { name: 'setAccessor' });\n\naddDecorators(classes, {\n  name: 'Component',\n  arguments: [\"{template: ''}\"],\n});\n\naddDecorators(methods, {\n  name: 'Required',\n  arguments: [],\n});\n\naddDecorators(constructorParams, {\n  name: 'Optional',\n  arguments: [],\n});\n\naddDecorators(methodParams, {\n  name: 'Pure',\n  arguments: [],\n});\n\naddDecorators(properties, {\n  name: 'ContentChild',\n  arguments: ['SomeComponent'],\n});\n\naddDecorators(getAccessorss, {\n  name: 'AnotherDecorator',\n  arguments: ['SomeComponent', \"['string']\"],\n});\n\naddDecorators(setAccessors, {\n  name: 'SetDecorator',\n  arguments: [\"[1, 3]\"],\n});\n\nconst declarations = getAllDecorators('some/path/**.ts', {\n    name: 'Inject',\n});\n\neditDecorators(declarations, () => ({\n    name: 'Directive',\n}));\n\nremoveDecorators(declarations);\n\nsaveActiveProject();\n`;\n","export const METHODS_SAMPLES = `import {\n    addMethods,\n    getMethods,\n    editMethods,\n    removeMethods,\n    setActiveProject,\n    saveActiveProject,\n} from 'ng-morph';\n\nsetActiveProject(createProject(new NgMorphTree(), '/', ['**/*.ts'));\n\naddMethods(getClasses('some/path/file.ts', { name: 'B' }), {\n    name: 'test',\n    statements: 'return 0;',\n    returnType: 'number',\n});\n\nconst declarations = getMethods(getClasses('some/path/**.ts'), {\n    name: 'd',\n    isStatic: true,\n});\n\neditMethods(declarations, ({ isAsync }) => ({\n    name: 'b',\n    isAsync: !isAsync,\n}));\n\nremoveMethods(declarations);\n\nsaveActiveProject();\n`;\n","export const PROPERTIES_SAMPLES = `import {\n    addProperties,\n    getProperties,\n    editProperties,\n    removeProperties,\n    setActiveProject,\n    saveActiveProject,\n} from 'ng-morph';\n\nsetActiveProject(createProject(new NgMorphTree(), '/', ['**/*.ts'));\n\naddProperties(getClasses('some/path/file.ts', { name: 'B' }), {\n    name: 'test',\n    initializer: '3',\n});\n\nconst declarations = getProperties(getClasses('some/path/**.ts'), {\n    name: 'd',\n    isStatic: true,\n});\n\neditProperties(declarations, () => ({\n    name: 'b',\n    initializer: \"'s'\",\n}));\n\nremoveProperties(declarations);\n\nsaveActiveProject();\n`;\n"],"names":["TuiDocCodeModule","TuiDocPageModule","ACCESSORS_SAMPLES","CONSTRUCTORS_SAMPLES","DECORATORS_SAMPLES","METHODS_SAMPLES","PROPERTIES_SAMPLES","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","add","getClasses","edit","remove","ctx_r1","constructors","ctx_r2","methods","ctx_r3","properties","ctx_r4","accessors","ctx_r5","decorators","ClassesComponent","constructor","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ClassesComponent_Template","rf","ctx","ɵɵtemplate","ClassesComponent_ng_template_1_Template","ClassesComponent_ng_template_2_Template","ClassesComponent_ng_template_3_Template","ClassesComponent_ng_template_4_Template","ClassesComponent_ng_template_5_Template","ClassesComponent_ng_template_6_Template","i1","TuiDocCodeComponent","TuiDocPageComponent","TuiDocPageTabConnectorDirective","encapsulation","changeDetection"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
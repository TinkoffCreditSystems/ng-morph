{"version":3,"file":"apps_demo_src_app_modules_types_types_module_ts.js","mappings":";;;;;;;;;;;;;;;AAAmE;;;AAEnE,MAAME,KAAK,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;CA0Bb;AAED,MAMaC,cAAc;EAN3BC,YAAA;IAOW,KAAAF,KAAK,GAAGA,KAAK;;EACvB,QAAAG,CAAA;;;;UAFYF,cAAc;IAAAG,IAAA;IAAAC,MAAA,EAAAC,6DAAA,CAAAP;EAAA;EAAA,QAAAS,EAAA;;;UAAdP,cAAc;IAAAQ,QAAA;IAAAC,QAAA,EAAAJ,0CAAA;IAAAK,QAAA,ECpC3B,kQAQA;IAAAC,MAAA;IAAAC,YAAA;MAAAC,IAAA;MAAAC,IAAA,EAAAC,oEAAA;MAAAP,QAAA;MAAAS,MAAA;IAAA;MAAAJ,IAAA;MAAAC,IAAA,EAAAC,oEAAA;MAAAP,QAAA;MAAAS,MAAA;IAAA;IAAAE,eAAA,EAAAd,kEAAA,CAAAe;EAAA;;AD4B2B;;;;;QAAdpB,cAAc;EAAAqB,UAAA;UAN1BvB,oDAAS;;gBACE,OAAO;MAAAqB,eAAA,EAGAtB,kEAAuB,CAACuB,MAAM;MAAAV,QAAA;MAAAC,MAAA;IAAA;;;;;;;;;;;;;;;;;;;;;;AElCR;AACM;AAC4B;AAC5B;AACI;;;AAEnD,MASagB,WAAW;EAAA,QAAAzB,CAAA;;;;UAAXyB,WAAW;IAAAxB,IAAA;IAAAC,MAAA,EAAAC,6DAAA,CAAAiB;EAAA;EAAA,QAAAf,EAAA;;;;UAAXoB,WAAW;IAAAC,YAAA,GAHP5B,4DAAc;IAAA6B,OAAA,GAJ3BH,yDAAa,EACbF,kEAAiB,EAAAT,yDAAA;IAAAe,OAAA,GAIT9B,4DAAc;EAAA;EAAA,QAAA+B,EAAA;;;;UAEbJ,WAAW;IAAAE,OAAA,GAPpBH,yDAAa,EACbF,kEAAiB,EACjBD,yDAAY,CAACS,QAAQ,CAACP,sEAAiB,CAACzB,4DAAc,CAAC,CAAC;EAAA;;AAKpC;;;;;QAAX2B,WAAW;EAAAN,UAAA;UATvBC,mDAAQ;WAAC;MACRO,OAAO,EAAE,CACPH,yDAAa,EACbF,kEAAiB,EACjBD,yDAAY,CAACS,QAAQ,CAACP,sEAAiB,CAACzB,4DAAc,CAAC,CAAC,CACzD;MACD4B,YAAY,EAAE,CAAC5B,4DAAc,CAAC;MAC9B8B,OAAO,EAAE,CAAC9B,4DAAc;KACzB","sources":["./apps/demo/src/app/modules/types/types.component.ts","./apps/demo/src/app/modules/types/types.template.html","./apps/demo/src/app/modules/types/types.module.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nconst types = `import {\n    addTypeAliases,\n    editTypeAliases,\n    getTypeAliases,\n    removeTypeAliases,\n    setActiveProject,\n    saveActiveProject,\n} from 'ng-morph';\n\nsetActiveProject(createProject(new NgMorphTree(), '/', ['**/*.ts'));\n\naddTypeAliases('some/path/file.ts', {\n    name: 'A',\n    typeParameters: ['T'],\n    type: 'T[]',\n});\n\nconst declarations = getTypeAliases('some/path/file.ts');\n\neditTypeAliases(declarations, () => ({\n    name: 'B',\n}));\n\nremoveTypeAliases(declarations);\n\nsaveActiveProject();\n`;\n\n@Component({\n  selector: 'types',\n  templateUrl: 'types.template.html',\n  styleUrls: ['./types.style.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TypesComponent {\n  readonly types = types;\n}\n","<tui-doc-page header=\"Types\">\n  <p>\n    You can create, get, edit and remove types in your files with declarative\n    descriptions and conditions.\n  </p>\n\n  <tui-doc-code filename=\"migration.ts\" [code]=\"types\"></tui-doc-code>\n</tui-doc-page>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TuiAddonDocModule, tuiGenerateRoutes } from '@taiga-ui/addon-doc';\nimport { TuiLinkModule } from '@taiga-ui/core';\nimport { TypesComponent } from './types.component';\n\n@NgModule({\n  imports: [\n    TuiLinkModule,\n    TuiAddonDocModule,\n    RouterModule.forChild(tuiGenerateRoutes(TypesComponent)),\n  ],\n  declarations: [TypesComponent],\n  exports: [TypesComponent],\n})\nexport class TypesModule {}\n"],"names":["ChangeDetectionStrategy","Component","types","TypesComponent","constructor","_","deps","target","i0","ɵɵFactoryTarget","_2","selector","ngImport","template","styles","dependencies","kind","type","i1","TuiDocCodeComponent","inputs","TuiDocPageComponent","changeDetection","OnPush","decorators","NgModule","RouterModule","TuiAddonDocModule","tuiGenerateRoutes","TuiLinkModule","TypesModule","declarations","imports","exports","_3","forChild"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
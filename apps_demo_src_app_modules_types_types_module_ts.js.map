{"version":3,"file":"apps_demo_src_app_modules_types_types_module_ts.js","mappings":";;;;;;;;;;;;;;;;;AAEA,MAAMA,KAAK,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;CA0Bb;AAED,MAMaC,cAAc;EAN3BC,YAAA;IAOW,KAAAF,KAAK,GAAGA,KAAK;;;AADXC,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAE,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCpC3BE,4DAAA,sBAA6B;MAEzBA,oDAAA,+GAEF;MAAAA,0DAAA,EAAI;MAEJA,uDAAA,sBAAoE;MACtEA,0DAAA,EAAe;;;MADyBA,uDAAA,GAAc;MAAdA,wDAAA,SAAAD,GAAA,CAAAV,KAAA,CAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLP;AAC4B;AAC5B;AACI;;;AAEnD,MASasB,WAAW;AAAXA,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;QAAXA;AAAW;AAAXA,WAAW;YAPpBD,yDAAa,EACbF,kEAAiB,EACjBD,kEAAqB,CAACE,sEAAiB,CAACnB,4DAAc,CAAC,CAAC;AAAA;AAKpC;;sHAAXqB,WAAW;IAAAE,YAAA,GAHPvB,4DAAc;IAAAwB,OAAA,GAJ3BJ,yDAAa,EACbF,kEAAiB,EAAAO,yDAAA;IAAAC,OAAA,GAIT1B,4DAAc;EAAA;AAAA","sources":["./apps/demo/src/app/modules/types/types.component.ts","./apps/demo/src/app/modules/types/types.template.html","./apps/demo/src/app/modules/types/types.module.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nconst types = `import {\n    addTypeAliases,\n    editTypeAliases,\n    getTypeAliases,\n    removeTypeAliases,\n    setActiveProject,\n    saveActiveProject,\n} from 'ng-morph';\n\nsetActiveProject(createProject(new NgMorphTree(), '/', ['**/*.ts'));\n\naddTypeAliases('some/path/file.ts', {\n    name: 'A',\n    typeParameters: ['T'],\n    type: 'T[]',\n});\n\nconst declarations = getTypeAliases('some/path/file.ts');\n\neditTypeAliases(declarations, () => ({\n    name: 'B',\n}));\n\nremoveTypeAliases(declarations);\n\nsaveActiveProject();\n`;\n\n@Component({\n  selector: 'types',\n  templateUrl: 'types.template.html',\n  styleUrls: ['./types.style.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TypesComponent {\n  readonly types = types;\n}\n","<tui-doc-page header=\"Types\">\n  <p>\n    You can create, get, edit and remove types in your files with declarative\n    descriptions and conditions.\n  </p>\n\n  <tui-doc-code filename=\"migration.ts\" [code]=\"types\"></tui-doc-code>\n</tui-doc-page>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TuiAddonDocModule, tuiGenerateRoutes } from '@taiga-ui/addon-doc';\nimport { TuiLinkModule } from '@taiga-ui/core';\nimport { TypesComponent } from './types.component';\n\n@NgModule({\n  imports: [\n    TuiLinkModule,\n    TuiAddonDocModule,\n    RouterModule.forChild(tuiGenerateRoutes(TypesComponent)),\n  ],\n  declarations: [TypesComponent],\n  exports: [TypesComponent],\n})\nexport class TypesModule {}\n"],"names":["types","TypesComponent","constructor","selectors","decls","vars","consts","template","TypesComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","RouterModule","TuiAddonDocModule","tuiGenerateRoutes","TuiLinkModule","TypesModule","forChild","declarations","imports","i1","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
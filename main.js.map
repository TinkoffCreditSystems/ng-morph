{"version":3,"sources":["./apps/demo/src/environments/environment.ts","./apps/demo/src/app/app.module.ts","./apps/demo/src/main.ts","./apps/demo/src/app/routes.ts","./apps/demo/src/app/pages.ts","./apps/demo/src/app/logo/logo.component.ts","./apps/demo/src/app/logo/logo.template.html","./apps/demo/src/app/app.component.ts","./apps/demo/src/app/app.component.html","./apps/demo/src/app/getting-started/getting-started.module.ts","./apps/demo/src/app/getting-started/getting-started.component.ts","./apps/demo/src/app/getting-started/getting-started.template.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {\n  TuiDocMainModule,\n  TUI_DOC_LOGO,\n  TUI_DOC_PAGES,\n} from '@taiga-ui/addon-doc';\nimport { TuiLinkModule } from '@taiga-ui/core';\n\nimport { AppComponent } from './app.component';\nimport { RouterModule } from '@angular/router';\nimport { LOGO_CONTENT } from './logo/logo.component';\nimport { pages } from './pages';\nimport { GettingStartedModule } from './getting-started/getting-started.module';\nimport { ROUTES } from './routes';\nimport { HIGHLIGHT_OPTIONS } from 'ngx-highlightjs';\n\nexport const HIGHLIGHT_OPTIONS_VALUE = {\n  coreLibraryLoader: () => import('highlight.js/lib/core'),\n  lineNumbersLoader: () => import('highlightjs-line-numbers.js'), // Optional, only if you want the line numbers\n  languages: {\n    typescript: () => import('highlight.js/lib/languages/typescript'),\n    less: () => import('highlight.js/lib/languages/less'),\n    xml: () => import('highlight.js/lib/languages/xml'),\n  },\n};\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    TuiDocMainModule,\n    TuiLinkModule,\n    GettingStartedModule,\n    RouterModule.forRoot(ROUTES, { initialNavigation: 'enabled' }),\n  ],\n  providers: [\n    {\n      provide: TUI_DOC_LOGO,\n      useValue: LOGO_CONTENT,\n    },\n    {\n      provide: TUI_DOC_PAGES,\n      useValue: pages,\n    },\n    {\n      provide: HIGHLIGHT_OPTIONS,\n      useValue: HIGHLIGHT_OPTIONS_VALUE,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { Route } from '@angular/router';\nimport { GettingStartedComponent } from './getting-started/getting-started.component';\n\nexport const ROUTES: Route[] = [\n  {\n    path: 'getting-started',\n    component: GettingStartedComponent,\n    data: {\n      title: `Getting started`,\n    },\n  },\n  {\n    path: 'classes',\n    loadChildren: () =>\n      import('./modules/classes/classes.module').then((m) => m.ClassesModule),\n    data: {\n      title: `Classes`,\n    },\n  },\n  {\n    path: 'interfaces',\n    loadChildren: () =>\n      import('./modules/interfaces/interfaces.module').then(\n        (m) => m.InterfacesModule\n      ),\n    data: {\n      title: `Interfaces`,\n    },\n  },\n  {\n    path: 'variables',\n    loadChildren: () =>\n      import('./modules/variables/variables.module').then(\n        (m) => m.VariablesModule\n      ),\n    data: {\n      title: `Variables`,\n    },\n  },\n  {\n    path: 'imports-and-exports',\n    loadChildren: () =>\n      import('./modules/imports-and-exports/imports-and-exports.module').then(\n        (m) => m.ImportsAndExportsModule\n      ),\n    data: {\n      title: `Imports and Exports`,\n    },\n  },\n  {\n    path: 'enums',\n    loadChildren: () =>\n      import('./modules/enums/enums.module').then((m) => m.EnumsModule),\n    data: {\n      title: `Enums`,\n    },\n  },\n  {\n    path: 'functions',\n    loadChildren: () =>\n      import('./modules/functions/functions.module').then((m) => m.FunctionsModule),\n    data: {\n      title: `Functions`,\n    },\n  },\n  {\n    path: 'types',\n    loadChildren: () =>\n      import('./modules/types/types.module').then((m) => m.TypesModule),\n    data: {\n      title: `Types`,\n    },\n  },\n  {\n    path: 'get-main-module',\n    loadChildren: () =>\n      import('./modules/get-main-module/get-main-module.module').then(\n        (m) => m.GetMainModuleModule\n      ),\n    data: {\n      title: `Get main module`,\n    },\n  },\n  {\n    path: 'get-bootstrap-function',\n    loadChildren: () =>\n      import(\n        './modules/get-bootstrap-function/get-bootstrap-function.module'\n      ).then((m) => m.GetBootstrapFunctionModule),\n    data: {\n      title: `Get bootstrap function`,\n    },\n  },\n  {\n    path: 'source-files',\n    loadChildren: () =>\n      import('./modules/source-files/source-files.module').then(\n        (m) => m.SourceFilesModule\n      ),\n    data: {\n      title: `Source files`,\n    },\n  },\n  { path: '**', redirectTo: 'getting-started' },\n];\n","import { TuiDocPages } from '@taiga-ui/addon-doc';\n\nexport const pages: TuiDocPages = [\n  {\n    section: `Starting`,\n    title: `Getting started`,\n    keywords: 'intro, how to, guide, main, главная, начало, инструкция',\n    route: 'getting-started',\n  },\n  {\n    section: `File body processing`,\n    title: `Classes`,\n    keywords:\n      'classes, file, methods, props, properties, accessors, constructors, decorators',\n    route: 'classes',\n  },\n  {\n    section: `File body processing`,\n    title: `Interfaces`,\n    keywords: 'interfaces, file, typescript',\n    route: 'interfaces',\n  },\n  {\n    section: `File body processing`,\n    title: `Variables`,\n    keywords: 'variables, const, let, var, file, typescript',\n    route: 'variables',\n  },\n  {\n    section: `File body processing`,\n    title: `Imports and Exports`,\n    keywords: 'import, export, file, typescript',\n    route: 'imports-and-exports',\n  },\n  {\n    section: `File body processing`,\n    title: `Functions`,\n    keywords: 'functions, arguments, return, file, typescript',\n    route: 'functions',\n  },\n  {\n    section: `File body processing`,\n    title: `Enums`,\n    keywords: 'enums, enumerate, file, typescript',\n    route: 'enums',\n  },\n  {\n    section: `File body processing`,\n    title: `Types`,\n    keywords: 'types, aliases, file, typescript',\n    route: 'types',\n  },\n  {\n    section: `Angular bootstrap`,\n    title: `Get bootstrap function`,\n    keywords: 'angular, bootstrap, module, typescript',\n    route: 'get-bootstrap-function',\n  },\n  {\n    section: `Angular bootstrap`,\n    title: `Get main module`,\n    keywords: 'angular, bootstrap, module, typescript',\n    route: 'get-main-module',\n  },\n  {\n    section: `File system`,\n    title: `Source files`,\n    keywords: 'files, file, system, tree, typescript',\n    route: 'source-files',\n  },\n];\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { PolymorpheusComponent } from '@tinkoff/ng-polymorpheus';\n\n@Component({\n  selector: 'logo',\n  templateUrl: './logo.template.html',\n  styleUrls: ['./logo.style.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LogoComponent {}\n\nexport const LOGO_CONTENT = new PolymorpheusComponent(LogoComponent);\n","<img src=\"assets/images/ng-morph.png\" class=\"logo\" alt=\"Logo\" />\nng-morph\n<img src=\"assets/images/by.svg\" class=\"by\" alt=\"by Tinkoff\" />\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'ng-morph-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent {}\n","<tui-doc-main>\n  <ng-container ngProjectAs=\"tuiDocHeader\">\n    <a\n      class=\"npm-link\"\n      href=\"https://www.npmjs.com/package/ng-morph\"\n      target=\"_blank\"\n    >\n      <img\n        alt=\"npm-link\"\n        src=\"https://img.shields.io/npm/dy/ng-morph?color=gainsboro&style=flat-square\"\n      />\n    </a>\n\n    <a\n      tuiLink\n      tuiMode=\"onLight\"\n      class=\"github-link\"\n      href=\"https://github.com/TinkoffCreditSystems/ng-morph\"\n      target=\"_blank\"\n    >\n      <img class=\"github\" src=\"assets/images/github.svg\" alt=\"\" />\n      GitHub\n    </a>\n  </ng-container>\n</tui-doc-main>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TuiDocPageModule, TuiDocCodeModule } from '@taiga-ui/addon-doc';\nimport { TuiLinkModule } from '@taiga-ui/core';\nimport { GettingStartedComponent } from './getting-started.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TuiDocPageModule,\n    TuiLinkModule,\n    TuiDocCodeModule,\n    RouterModule,\n  ],\n  declarations: [GettingStartedComponent],\n  exports: [GettingStartedComponent],\n})\nexport class GettingStartedModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nconst script = `import {\n  setActiveProject,\n  createProject,\n  getImports,\n  NgMorphTree,\n} from 'ng-morph';\n\n/**\n * set all ng-morph functions to work with the all TS and JSON files\n * of the current project\n * */\nsetActiveProject(\n  createProject(new NgMorphTree(), '/', ['**/*.ts', '**/*.json'])\n);\n\n/**\n * This simple migration gets all imports from the project TS files and\n * replaces 'old' substring with 'new'\n * */\nconst imports = getImports('some/path/**.ts', {\n    moduleSpecifier: '@morph-old*',\n});\n\neditImports(imports, importEntity => ({\n    moduleSpecifier: importEntity.moduleSpecifier.replace('old', 'new')\n}));\n\n/**\n * All changes are made in a virtual project.\n * You can save them when it is time\n * */\nsaveActiveProject();\n`;\n\nconst creatingRule = `import {\n    setActiveProject,\n    saveActiveProject,\n    createProject,\n    getImports,\n    editImports,\n} from 'ng-morph';\n\nexport default (): Rule => {\n    return tree => {\n        /**\n         * set all ng-morph functions to work with the all TS and JSON files\n         * of the current project\n         * */\n        setActiveProject(createProject(tree, '/', ['**/*.ts', '**/*.json']));\n\n        /**\n         * This function gets all imports from the project TS files and\n         * replaces 'old' substring with 'new'\n         * */\n        const imports = getImports('some/path/**.ts', {\n            moduleSpecifier: '@morph-old*',\n        });\n\n        editImports(imports, importEntity => ({\n            moduleSpecifier: importEntity.moduleSpecifier.replace('old', 'new')\n        }));\n\n        /**\n         * All changes are made in a virtual project.\n         * You can save them when it is time\n         * */\n        saveActiveProject();\n    };\n};`;\n\nconst creatingSpec = `\n// We use schematics devkit to emulate virtual Tree\nimport {SchematicTestRunner, UnitTestTree} from '@angular-devkit/schematics/testing';\nimport {HostTree} from '@angular-devkit/schematics';\n\n// We can emulate filesystem with ng-morph\nimport {\n    createProject,\n    resetActiveProject,\n    setActiveProject,\n    createSourceFile,\n    saveActiveProject,\n} from 'ng-morph';\n\nconst collectionPath = join(__dirname, '../collection.json');\n\ndescribe('ng-add', () => {\n    describe('removes old postfix', () => {\n        let host: UnitTestTree;\n        let runner: SchematicTestRunner;\n\n        beforeEach(() => {\n            host = new UnitTestTree(new HostTree());\n            runner = new SchematicTestRunner('schematics', collectionPath);\n\n            // preparing virtual file tree with one file\n            setActiveProject(createProject(host));\n\n            createSourceFile(\n                'src/module.ts',\n                \"import {a} from '@morph-old/core';\",\n            );\n\n            saveActiveProject();\n        });\n\n        it('should replace old with new in TS imports', async () => {\n            expect.assertions(1);\n\n            // Our migration returns Tree\n            const tree = await runner.runSchematicAsync('ng-add', {}, host).toPromise();\n\n            expect(tree.readContent('src/module.ts')).toEqual(\n                \"import {a} from '@morph-new/core';\",\n            );\n        });\n\n        afterEach(() => {\n            // clear it up\n            resetActiveProject();\n        });\n    });\n});\n`;\n\n@Component({\n  selector: 'getting-started',\n  templateUrl: './getting-started.template.html',\n  styles: [':host {max-width: 1200px}'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class GettingStartedComponent {\n  readonly script = script;\n  readonly creatingRule = creatingRule;\n  readonly creatingSpec = creatingSpec;\n}\n","<tui-doc-page header=\"Getting started\">\n  <p>\n    <strong>ng-morph</strong> is a large set of tools that speeds up your work\n    with Angular schematics. It has\n    <a tuiLink href=\"https://ts-morph.com/\">ts-morph</a> under the hood and\n    allows you to manipulate with safe TypeScript AST.\n  </p>\n\n  <section>\n    <h3>Why is it better than default schematics?</h3>\n\n    <ul>\n      <li>\n        🛠 There are many tools made for working with Angular. You can easily\n        find and manipulate TS and Ng entities.\n      </li>\n\n      <li>\n        ✅ You work with an abstract tree and it can be replaced, for example,\n        with virtual tree for testing instead of real file system. So, you can\n        test your schematics rapidly fast.\n      </li>\n    </ul>\n  </section>\n\n  <h3>How to install</h3>\n\n  <tui-doc-code code=\"npm i --save-dev ng-morph\"></tui-doc-code>\n\n  <p>\n    You also need <code>@angular-devkit/core</code> and\n    <code>@angular-devkit/schematics</code> to be installed.\n  </p>\n\n  <p>Enjoy!</p>\n\n  <section>\n    <h3>How to run ng-morph</h3>\n\n    <h4>Running in your own project as a script</h4>\n\n    <p>\n      You can use ng-morph for global updates of your porject code base, big\n      refactiorings, dependencies migrations and much more. Just describe\n      everything you want in a simple script and run it.\n    </p>\n\n    <tui-doc-code filename=\"script.ts\" [code]=\"script\"></tui-doc-code>\n\n    Now you can compile and run this script or just use something like\n    <a tuiLink href=\"https://www.npmjs.com/package/ts-node\" target=\"_blank\"\n      >ts-node</a\n    >\n    that allows you to start TS script as soon as it is ready.\n\n    <h4>Creating schematics for publishing with libraries</h4>\n\n    You can write schematics scripts to simplify your library installation or\n    make fully automated migrations between releases with breaking changes.\n\n    <p>\n      Creating Angular <code>ng-add</code> or <code>ng-update</code> schematics\n      you work with\n      <a\n        tuiLink\n        href=\"https://angular.io/guide/schematics-for-libraries#define-the-rule\"\n        target=\"_blank\"\n        >Rule</a\n      >\n      functions. Rule function gets a <code>Tree</code> as a first argument and\n      you can pass this tree to <code>setActiveProject</code> function from\n      ng-morph the following way:\n    </p>\n\n    <tui-doc-code filename=\"ng-add.ts\" [code]=\"creatingRule\"></tui-doc-code>\n  </section>\n\n  <section>\n    <h3>How to test your schematics</h3>\n\n    <p>\n      You can use any test runner you like to check that your schematics work as\n      you expect.\n    </p>\n\n    <p>Let's try to test the migration above:</p>\n\n    <tui-doc-code\n      filename=\"ng-add.spec.ts\"\n      [code]=\"creatingSpec\"\n    ></tui-doc-code>\n  </section>\n\n  <section>\n    <h3>What is next?</h3>\n\n    <p>\n      So, now you know how to set it up. Give a star to\n      <a\n        tuiLink\n        href=\"https://github.com/TinkoffCreditSystems/ng-morph\"\n        target=\"_blank\"\n        >our project on Github</a\n      >\n      and start exploring utils in the left menu to find all the tools you need.\n      We suggest you to start with\n      <a tuiLink routerLink=\"/classes\">Classes</a>\n    </p>\n  </section>\n</tui-doc-page>\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}
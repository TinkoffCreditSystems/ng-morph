{"version":3,"sources":["./apps/demo/src/app/modules/enums/enums.module.ts","./apps/demo/src/app/modules/enums/enums.component.ts","./apps/demo/src/app/modules/enums/enums.template.html"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACyB;AACzB;AACI;;;AAW5C,MAAM,WAAW;;sEAAX,WAAW;0FAAX,WAAW;8FARb;YACP,4DAAa;YACb,qEAAiB;YACjB,4DAAY,CAAC,QAAQ,CAAC,0EAAc,CAAC,+DAAc,CAAC,CAAC;SACtD;mIAIU,WAAW,mBAHP,+DAAc,aAJ3B,4DAAa;QACb,qEAAiB,2EAIT,+DAAc;;;;;;;;;;;;;;;;;;;ACX1B,MAAM,IAAI,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAgCZ,CAAC;AAQK,MAAM,cAAc;IAN3B;QAOW,SAAI,GAAG,IAAI,CAAC;KACtB;;4EAFY,cAAc;8FAAd,cAAc;QC1C3B,kFAA6B;QAC3B,oEAAG;QACD,mKAEF;QAAA,4DAAI;QAEJ,6EAAmE;QACrE,4DAAe;;QADyB,0DAAa;QAAb,0EAAa","file":"modules-enums-enums-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { generateRoutes, TuiAddonDocModule } from '@taiga-ui/addon-doc';\nimport { TuiLinkModule } from '@taiga-ui/core';\nimport { EnumsComponent } from './enums.component';\n\n@NgModule({\n  imports: [\n    TuiLinkModule,\n    TuiAddonDocModule,\n    RouterModule.forChild(generateRoutes(EnumsComponent)),\n  ],\n  declarations: [EnumsComponent],\n  exports: [EnumsComponent],\n})\nexport class EnumsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\nconst code = `import {\n    addEnums,\n    editEnums,\n    getEnums,\n    removeEnums,\n    setActiveProject,\n    saveActiveProject,\n} from 'ng-morph';\n\nsetActiveProject(createProject(new NgMorphTree(), '/', ['**/*.ts'));\n\naddEnums('some/path/file.ts', [\n    {\n      name: 'Enum',\n      isConst: true,\n      members: [{ name: 'First' }, { name: 'second' }],\n    },\n    {\n      name: 'EmptyEnum',\n      isExported: true,\n    },\n]);\n\nconst declarations = getEnums('some/path/**.ts');\n\neditEnums(declarations, () => ({\n    name: 'B',\n}));\n\nremoveEnums(declarations);\n\nsaveActiveProject();\n`;\n\n@Component({\n  selector: 'enums',\n  templateUrl: 'enums.template.html',\n  styleUrls: ['./enums.style.less'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EnumsComponent {\n  readonly code = code;\n}\n","<tui-doc-page header=\"Enums\">\n  <p>\n    You can create, get, edit and remove enums in your files with declarative\n    descriptions and conditions.\n  </p>\n\n  <tui-doc-code filename=\"migration.ts\" [code]=\"code\"></tui-doc-code>\n</tui-doc-page>\n"],"sourceRoot":"webpack:///"}